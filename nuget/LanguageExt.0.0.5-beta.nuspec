<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
    <metadata>
        <id>LanguageExt</id>
        <version>0.0.5-beta</version>
        <title>C# Functional Language Extensions</title>
        <authors>Paul Louth</authors>
        <licenseUrl>https://github.com/louthy/language-ext/blob/master/LICENSE.md</licenseUrl>
        <projectUrl>https://github.com/louthy/language-ext</projectUrl>
        <iconUrl>http://www.4four.org/images/lang-ext-logo.png</iconUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <description>Using and abusing the features of C# 6 to provide lots of helper functions and types, which, if you squint, can look like extensions to the language itself. 

This package brings functional helpers for classic C# problems:

Poor tuple support
Null reference problem
Lack of lambda and expression inference
Void isn't a real type
Mutable lists and dictionaries
The awful 'out' parameter</description>
        <summary />
        <releaseNotes>New functions for Option, OptionUnsafe, TryOption:
 - bind
 - map
 - exists
 - fold
 - count
 - forall
 - ToList
 - ToArray

New functions in List and Map:
 - iter
 - forall
 - mapi
 - addRange

Improved memoization:
 - Uses a WeakDictionary from the ch.codeplex.com library, this removes the possibility of memory-leaks whilst maintaining the compositional nature of `Func&lt;T,R&gt;`.  In a unit-test memoizing 0 -&gt; Int32.MaxValue strings, the NUnit runner never jumped above 45mb.
 - memo() must use a reference type for R, so the old memoization function is kept for completeness, except it's now called memoUnsafe, with warnings in the comments about potential memory leaks.
 
Breaking changes: 
 - each() has been renamed iter()
 - AsEnumerableOne() renamed AsEnumerable() and removed the infinite variants (originally called AsEnumerable())</releaseNotes>
        <tags>C# Functional Language Extension</tags>
        <dependencies>
            <group targetFramework=".NETFramework4.5">
                <dependency id="System.Collections.Immutable" version="1.1.32-beta" />
            </group>
        </dependencies>
        <frameworkAssemblies>
            <frameworkAssembly assemblyName="System" targetFramework="" />
        </frameworkAssemblies>
    </metadata>
    <files>
        <file src="..\lib\ConcurrentHashtable.License.txt" target="content\ConcurrentHashtable.License.txt" />
        <file src="..\lib\ConcurrentHashtable.dll" target="lib\ConcurrentHashtable.dll" />
        <file src="lib\LanguageExt.Core.dll" target="lib\LanguageExt.Core.dll" />
    </files>
</package>